@using Sandbox;
@using Sandbox.UI;
@using System;
@attribute [StyleSheet]

@namespace GuessIt

<root>
    @if(string.IsNullOrEmpty(Override))
    {
        <div class="header">@Header</div>
    }
    else
    {
        <div class="override">@Override</div>
    }
    <div @ref="WordContainer" class="word @WordClasses()">
    </div>
</root>

@code
{
    Panel WordContainer { get; set; }
    string Override = "";
    string Header = "Guess the following:";
    string Word = "BUCKAROO";

    public void SetOverride(string over)
    {
        Override = over;
        Word = "";

        foreach(var child in WordContainer.Children)
        {
            child.Delete();
        }

        StateHasChanged();
    }

    public void SetWord(string word, string header = "Guess the following:", bool visible = false)
    {
        Override = "";
        Word = word;
        Header = header;
        
        StateHasChanged();

        foreach(var child in WordContainer.Children)
        {
            child.Delete();
        }

        for(int i=0; i<Word.Length; i++)
        {
            var letter = Word[i];
            var letterPanel = WordContainer.AddChild<GameLetter>();
            letterPanel.Style.AnimationDelay = 0.08f * i;
            letterPanel.Letter = letter.ToString();
            // check if letter is alphanumeric
            if(!Char.IsLetterOrDigit(letter) || Char.IsSymbol(letter))
            {
                letterPanel.AddClass("symbol");
                letterPanel.Hidden = false;
            }
            if(visible) letterPanel.Hidden = false;
        }
    }

    string WordClasses()
    {
        if(Word == "") return "hidden";
        return "";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Override, Word, Header);
    }
}