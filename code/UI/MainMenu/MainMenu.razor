@using Sandbox;
@using Sandbox.UI;
@using Sandbox.MenuSystem;
@using System;
@attribute [StyleSheet]

@namespace GuessIt

<root>

    <div class="mainmenu">
        <div class="logo-container">
            <img src="ui/logo.png" class="logo" />
            <p>A game by Carson Kompon</p>
        </div>

        <div class="menu-container">
            <button class="btn btn-primary" onclick=@CreateLobby>Create Lobby</button>
            <button class="btn btn-primary" onclick=@HowToPlay>How To Play</button>
        </div>
    </div>

    <div class="lobbylist">
        <LobbyPanel />
    </div>
    
    @if(!string.IsNullOrEmpty(VersionDate))
    {
        <div class="version">
            <p>v@(VersionDate)</p>
        </div>
    }
</root>

@code
{
    HowToPlayMenu HowToPlayPopup;
    LobbyCreateMenu CreateLobbyPopup;
    string VersionDate { get; set; } = "";

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);
        if(firstTime)
        {
            InitVersion();
        }
    }

    async void InitVersion()
    {
        Package package = await Package.FetchAsync("carsonk.guessit", true);
        VersionDate = package.Revision.Created.ToString("yyyy-MM-dd HH:mm:ss");
    }

    async void CreateLobby()
    {
        if(CreateLobbyPopup.IsValid())
        {
            CreateLobbyPopup.Delete();
        }
        CreateLobbyPopup = AddChild<LobbyCreateMenu>();

        Game.Menu.Lobby?.Leave();
        await Game.Menu.CreateLobbyAsync( 16 );
        if(Game.Menu.Lobby is not GameLobby gameLobby) return;
        gameLobby.Access = GameLobby.AccessMode.Private;
        
    }

    void HowToPlay()
    {
        if(HowToPlayPopup.IsValid())
        {
            HowToPlayPopup.Delete();
        }
        HowToPlayPopup = AddChild<HowToPlayMenu>();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(VersionDate);
    }


}